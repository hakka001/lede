# 
# <https://github.com/KFERMercer/OpenWrt-CI>
#
# Copyright (C) 2019 P3TERX
#
# Copyright (C) 2020 KFERMercer
#
name: cm520-79f

on:
  push:
    branches: 
      - master

jobs:

  build_openwrt:

    name: cm520-79f

    runs-on: ubuntu-latest

    if: github.event.repository.owner.id == github.event.sender.id

    steps:

      - name: Checkout
        uses: actions/checkout@v2
        with:
          ref: master

      - name: Space cleanup
        env:
          DEBIAN_FRONTEND: noninteractive
        run: |
          docker rmi `docker images -q`
          sudo rm -rf /usr/share/dotnet /etc/mysql /etc/php /etc/apt/sources.list.d /usr/local/lib/android
          sudo -E apt-get -y purge azure-cli ghc* zulu* hhvm llvm* firefox google* dotnet* powershell openjdk* adoptopenjdk* mysql* php* mongodb* dotnet* moby* snapd* || true
          sudo -E apt-get update
          sudo -E apt-get -y install build-essential asciidoc binutils bzip2 gawk gettext git libncurses5-dev libz-dev patch python3 unzip zlib1g-dev lib32gcc1 libc6-dev-i386 subversion flex uglifyjs gcc-multilib g++-multilib p7zip p7zip-full msmtp libssl-dev texinfo libglib2.0-dev xmlto qemu-utils upx libelf-dev autoconf automake libtool autopoint device-tree-compiler antlr3 gperf swig
          sudo -E apt-get -y autoremove --purge
          sudo -E apt-get clean

          df -h

      - name: Update feeds
        run: |
          sed -i 's/#src-git helloworld/src-git helloworld/g' ./feeds.conf.default
          ./scripts/feeds update -a
          ./scripts/feeds install -a

      - name: Generate configuration file
        # run: make defconfig
        run: |
          rm -f ./.config*
          touch ./.config
          
          # 编译cm520-79f固件:
          cat >> .config <<EOF
          CONFIG_TARGET_IMAGES_GZIP=y
          CONFIG_KERNEL_BUILD_USER="OpenWrt-CI"
          CONFIG_KERNEL_BUILD_DOMAIN="Azure"
          CONFIG_TARGET_ipq40xx=y
          CONFIG_TARGET_ipq40xx_DEVICE_mobipromo_cm520-79f=y
          CONFIG_HAS_DEVICES=y
          CONFIG_TARGET_BOARD="ipq40xx"
          CONFIG_TARGET_SUBTARGET="generic"
          CONFIG_TARGET_PROFILE="DEVICE_mobipromo_cm520-79f"
          # CONFIG_TARGET_ipq40xx=y
          # CONFIG_TARGET_ipq40xx_generic=y
          # CONFIG_TARGET_ipq40xx_generic_DEVICE_mobipromo_cm520-79f=y


          # 文件系统镜像等支持:
          # CONFIG_TARGET_ROOTFS_EXT4FS is not set
          # CONFIG_TARGET_ROOTFS_SQUASHFS=y
          # CONFIG_TARGET_SQUASHFS_BLOCK_SIZE=256
          # CONFIG_TARGET_UBIFS_FREE_SPACE_FIXUP=y
          # CONFIG_TARGET_UBIFS_JOURNAL_SIZE=""

          # 固件压缩:
          CONFIG_TARGET_IMAGES_GZIP=y

          # IPv6支持:
          CONFIG_PACKAGE_dnsmasq_full_dhcpv6=y
          CONFIG_PACKAGE_ip6tables=y
          CONFIG_PACKAGE_ipv6helper=y

          # 常用LuCI插件选择:
          CONFIG_LIBCURL_NO_SMB="!"
          # CONFIG_PACKAGE_luci-app-samba is not set
          # CONFIG_PACKAGE_autosamba is not set
          CONFIG_PACKAGE_luci-app-accesscontrol=y
          # CONFIG_PACKAGE_luci-app-adguardhome is not set
          CONFIG_PACKAGE_luci-app-ddns=y
          CONFIG_DEFAULT_ddns-scripts_aliyun=y
          CONFIG_DEFAULT_ddns-scripts_dnspod=y
          CONFIG_DEFAULT_luci-app-pppoe-server=y
          CONFIG_PACKAGE_luci-app-adbyby-plus=y
          CONFIG_PACKAGE_luci-app-arpbind=y
          CONFIG_PACKAGE_luci-app-autoreboot=y
          CONFIG_PACKAGE_luci-app-baidupcs-web=y
          CONFIG_PACKAGE_luci-app-cifsd=y
          CONFIG_PACKAGE_luci-app-cpufreq=y
          CONFIG_PACKAGE_luci-app-filetransfer=y
          CONFIG_PACKAGE_luci-app-firewall=y
          CONFIG_PACKAGE_luci-app-guest-wifi=y
          CONFIG_DEFAULT_ipq-wifi-mobipromo_cm520-79f=y
          CONFIG_PACKAGE_luci-app-hd-idle=y
          # CONFIG_PACKAGE_luci-app-ipsec-vpnd is not set
          # CONFIG_PACKAGE_luci-app-openvpn-server is not set
          # CONFIG_PACKAGE_luci-app-softethervpn is not set
          CONFIG_PACKAGE_luci-app-nps=y
          CONFIG_PACKAGE_luci-app-ramfree=y
          CONFIG_PACKAGE_luci-app-ssr-plus=y
          CONFIG_PACKAGE_luci-app-ssr-plus_INCLUDE_V2ray_plugin=y
          CONFIG_PACKAGE_luci-app-ssr-plus_INCLUDE_V2ray=y
          CONFIG_PACKAGE_luci-app-ssr-plus_INCLUDE_Trojan=y
          CONFIG_PACKAGE_luci-app-ssr-plus_INCLUDE_Kcptun=y
          CONFIG_PACKAGE_luci-app-ssr-plus_INCLUDE_Xray=y
          CONFIG_PACKAGE_luci-app-syncdial=y
          CONFIG_PACKAGE_luci-app-ttyd=y
          # CONFIG_PACKAGE_luci-app-unblockmusic is not set
          CONFIG_PACKAGE_luci-app-unblockneteasemusic=y
          CONFIG_PACKAGE_luci-app-upnp=y
          CONFIG_PACKAGE_luci-app-wol=y
          CONFIG_PACKAGE_luci-app-vlmcsd=y
          CONFIG_PACKAGE_luci-app-vsftpd=y
          CONFIG_DEFAULT_luci-app-sfe=y
          CONFIG_PACKAGE_luci-app-nlbwmon=y
          # CONFIG_PACKAGE_luci-app-zerotier is not set
          CONFIG_DEFAULT_ppp-mod-pppoe=y
          # CONFIG_PACKAGE_openssh-sftp-server is not set
          # CONFIG_PACKAGE_luci-app-passwall is not set
          # CONFIG_PACKAGE_luci-app-transmission is not set
          # CONFIG_PACKAGE_luci-app-dockerman is not set
          CONFIG_PACKAGE_luci-app-familycloud=y
          # CONFIG_PACKAGE_luci-app-openvpn is not set
          # CONFIG_DEFAULT_luci-app-flowoffload is not set
          # CONFIG_PACKAGE_luci-app-aria2 is not set
          # CONFIG_DEFAULT_luci-app-sqm is not set
          # CONFIG_PACKAGE_luci-app-nfs is not set
          # CONFIG_PACKAGE_luci-app-rp-pppoe-server is not set
          # CONFIG_PACKAGE_luci-app-frpc is not set
          # CONFIG_PACKAGE_luci-app-kodexplorer is not set
          # CONFIG_PACKAGE_luci-app-mwan3 is not set
          # CONFIG_PACKAGE_luci-app-mwan3helper is not set
          # CONFIG_PACKAGE_luci-app-noddos is not set
          # CONFIG_PACKAGE_luci-app-qbittorrent is not set
          # CONFIG_PACKAGE_luci-app-qos is not set
          CONFIG_PACKAGE_luci-app-usb-printer=y
          # CONFIG_PACKAGE_luci-app-v2ray-server is not set
          # CONFIG_PACKAGE_luci-app-verysync is not set
          # CONFIG_PACKAGE_luci-app-webadmin is not set
          # CONFIG_PACKAGE_luci-app-wireguard is not set
          # CONFIG_PACKAGE_luci-app-wrtbwmon is not set
          # CONFIG_PACKAGE_luci-app-xlnetacc is not set
          CONFIG_PACKAGE_luci-app-filebrowser=y

          # LuCI主题:
          CONFIG_PACKAGE_luci-theme-opentomcat=y
          CONFIG_PACKAGE_luci-theme-netgear=y
          CONFIG_PACKAGE_luci-theme-argon=y
          # CONFIG_DEFAULT_luci-theme-bootstrap-mod is not set
          # CONFIG_DEFAULT_luci-theme-darkmatter is not set
          # CONFIG_PACKAGE_luci-theme-material is not set
          EOF

      - name: Make download
        run: |
          make download -j8
          find dl -size -1024c -exec rm -f {} \;

      - name: Compile firmware
        run: |
          make -j$(nproc) || make -j1 V=s
          echo "======================="
          echo "Space usage:"
          echo "======================="
          df -h
          echo "======================="
          du -h --max-depth=1 ./ --exclude=build_dir --exclude=bin
          du -h --max-depth=1 ./build_dir
          du -h --max-depth=1 ./bin

      - name: Prepare artifact
        run: |
          mkdir -p ./artifact/firmware
          mkdir -p ./artifact/package
          mkdir -p ./artifact/buildinfo
          rm -rf $(find ./bin/targets/ -type d -name "packages")
          cp -rf $(find ./bin/targets/ -type f) ./artifact/firmware/
          cp -rf $(find ./bin/packages/ -type f -name "*.ipk") ./artifact/package/
          cp -rf $(find ./bin/targets/ -type f -name "*.buildinfo" -o -name "*.manifest") ./artifact/buildinfo/

      - name: Deliver buildinfo
        uses: actions/upload-artifact@v2
        with:
          name: OpenWrt_buildinfo
          path: ./artifact/buildinfo/

      - name: Deliver package
        uses: actions/upload-artifact@v2
        with:
          name: OpenWrt_package
          path: ./artifact/package/

      - name: Deliver firmware
        uses: actions/upload-artifact@v2
        with:
          name: OpenWrt_firmware
          path: ./bin/targets/
  

      - name: Upload release asset
        if: github.event == 'release'
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.YOURTOKEN }}
          file: ./artifact/firmware/*
          tag: ${{ github.ref }}
          file_glob: true
